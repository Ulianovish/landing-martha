<div id="app" class="absolute inset-0"></div>
<script>
  import gsap from 'gsap';
  //Initialize the app container
  const app = document.getElementById('app');

  //Add some classes to the app container
  app.classList.add('bg-indigo-100', 'h-fit', 'w-width', 'flex', 'items-center');

  //Array of majors to list out:
  const ourMajors = [
    'Éxito',
    'Emprende',
    'Logralo',
    'Crecimiento',
    'Innovación',
    'Liderazgo',
    'Creatividad',
    'Visión',
    'Motivación',
    'Superación',
    'Estrategia',
    'Perseverancia',
    'Objetivos',
    'Metas',
    'Inspiración',
    'Determinación',
    'Progreso',
    'Excelencia',
    'Disciplina',
    'Empoderamiento',
    'Desarrollo',
    'Impacto',
    'Transformación',
    'Resiliencia',
    'Éxito',
    'Empuje',
    'Iniciativa',
    'Talento',
    'Potencial',
    'Esfuerzo',
    'Innovador',
    'Cambio',
    'Avance',
    'Conquista',
    'Realización',
    'Triunfo',
    'Ambición',
    'Pasión',
    'Logro',
    'Consecución',
    'Vanguardia',
    'Cumbre',
    'Cima',
    'Oportunidad',
    'Emprendimiento',
    'Proactividad',
    'Autodisciplina',
    'Proyección',
    'Ascenso',
    'Prosperidad',
    'Ascender',
    'Dominio',
    'Maestría',
    'Autogestión',
    'Potenciación',
    'Productividad',
    'Florecimiento',
    'Competencia',
    'Determinación',
    'Firmeza',
    'Alcance',
    'Persistencia',
    'Resolución',
    'Creación',
    'Posibilidad',
    'Rendimiento',
    'Capacidad',
    'Habilidad',
    'Ingenio',
    'Confianza',
    'Empuje',
    'Dedicación',
    'Superación',
    'Meta',
    'Desafío',
    'Motivación'
  ];

  //Create the container that will hold our rows of lists
  const listContainer = () => {
    const listContainer = document.createElement('div');
    listContainer.classList.add(
      'majors__container',
      'mx-auto',
      'overflow-hidden',
      'bg-custom-gradient',
      'h-screen'
    );

    //Add another div to rotate the lists to make a little more interesting
    const slantContainer = document.createElement('div');
    slantContainer.classList.add('-mt-16', 'rotate-[-10deg]');

    //This is to alternate classes between odd + even
    let even = false;

    //Loop to create the multiple rows
    for (let i = 0; i < 15; i++) {
      //Shuffle the array so that the lists appear randomized
      ourMajors.sort(() => {
        return 0.5 - Math.random();
      });

      //Pass the array into the list parameter as well as the even parameter
      slantContainer.appendChild(list(ourMajors, even));

      //toggle the variable to make sure it differentiates on the next iteration
      even = !even;
    }

    //Add the slanted container to the list container
    listContainer.appendChild(slantContainer);

    //Add the list container to the app
    app.appendChild(listContainer);
  };

  //Creates the list
  const list = (items, even) => {
    const listEl = document.createElement('ul');
    listEl.classList.add('majors__list', 'flex');

    //Uses the even parameter to determine if the --even or --odd modifier classes should be applied
    if (even) {
      listEl.classList.add('majors__list--even', 'translate-x-[-200%]');
    } else {
      listEl.classList.add('majors__list--odd');
    }

    items.forEach((item) => {
      listEl.appendChild(listItem(item));
    });
    return listEl;
  };

  //Creates the list item
  const listItem = (item) => {
    const listItemEl = document.createElement('li');
    listItemEl.classList.add(
      'majors__list-item',
      'whitespace-nowrap',
      'mx-4',
      'my-2',
      'text-3xl',
      'uppercase',
      'text-white'
    );
    listItemEl.innerText = item;
    return listItemEl;
  };

  //initializes the listContainer and renders it in the DOM
  listContainer();

  //Store the odd and even elements into arrays
  const evenRows = document.querySelectorAll('.majors__list--even');
  const oddRows = document.querySelectorAll('.majors__list--odd');

  //Animation will be a very slow, gentle sliding effect that alternates directions between rows

  //Add animation for the even rows
  evenRows.forEach((row) => {
    const rowTL = gsap.timeline();

    rowTL.to(row, {
      transform: 'translate(0)',
      duration: 800,
      ease: 'power2'
    });
  });

  //Add animation for the odd rows
  oddRows.forEach((row) => {
    const rowTL = gsap.timeline();

    rowTL.to(row, {
      transform: 'translate(-100%)',
      duration: 800,
      ease: 'power2'
    });
  });

  //For the overlay, we want it to be semi-opaque so that the background still appears, but we still want the message to be readable

  const overlay = () => {
    //Create the overlay
    const messageOverlay = document.createElement('div');
    messageOverlay.classList.add(
      'majors__overlay',
      'absolute',
      'top-0',
      'h-full',
      'w-full',
      'left-0',
      'flex',
      'items-center',
      'justify-center'
    );

    //Create the inner message container
    const messageContainer = document.createElement('div');
    messageContainer.classList.add('majors__message-container');

    //Add the inner Message HTML

    //Add the message to the overlay
    messageOverlay.appendChild(messageContainer);

    return messageOverlay;
  };

  //Add the overlay to the app
  app.appendChild(overlay());

  //create the animation for the overlay
  const messageOverlay = document.querySelector('.majors__overlay');
  const messageOverlayTL = gsap.timeline();

  messageOverlayTL.to(messageOverlay, {
    opacity: 1,
    duration: 0.5,
    delay: 4,
    ease: 'power2'
  });
</script>
