---
const { date } = Astro.props;

function zerofill(value) {
  return (value < 10 && value > -1 ? '0' : '') + value;
}
---

<div id="flip-clock" class="flip-clock" data-date={date}>
  <span class="flip-clock__piece" id="days">
    <span class="flip-clock__card flip-card">
      <b class="flip-card__top">00</b>
      <b class="flip-card__bottom" data-value="00"></b>
      <b class="flip-card__back" data-value="00"></b>
      <b class="flip-card__back-bottom" data-value="00"></b>
    </span>
    <span class="flip-clock__slot gradient-text">Dias</span>
  </span>
  <span class="flip-clock__piece" id="hours">
    <span class="flip-clock__card flip-card">
      <b class="flip-card__top">00</b>
      <b class="flip-card__bottom" data-value="00"></b>
      <b class="flip-card__back" data-value="00"></b>
      <b class="flip-card__back-bottom" data-value="00"></b>
    </span>
    <span class="flip-clock__slot gradient-text">Horas</span>
  </span>
  <span class="flip-clock__piece" id="minutes">
    <span class="flip-clock__card flip-card">
      <b class="flip-card__top">00</b>
      <b class="flip-card__bottom" data-value="00"></b>
      <b class="flip-card__back" data-value="00"></b>
      <b class="flip-card__back-bottom" data-value="00"></b>
    </span>
    <span class="flip-clock__slot gradient-text">Minutos</span>
  </span>
  <span class="flip-clock__piece" id="seconds">
    <span class="flip-clock__card flip-card">
      <b class="flip-card__top">00</b>
      <b class="flip-card__bottom" data-value="00"></b>
      <b class="flip-card__back" data-value="00"></b>
      <b class="flip-card__back-bottom" data-value="00"></b>
    </span>
    <span class="flip-clock__slot gradient-text">Segundos</span>
  </span>
</div>

<script>
  function zerofill(value) {
    return (value < 10 && value > -1 ? '0' : '') + value;
  }

  class Countdown {
    constructor(el, date) {
      this.el = el;
      this.date = date;
      this.time = {};
      this.i = 0;
      this.init();
    }

    init() {
      this.setCountdown(this.date);
      this.update();
    }

    setCountdown(date) {
      if (date) {
        this.countdown = new Date(date).getTime();
      } else {
        const endOfDay = new Date();
        endOfDay.setHours(23, 59, 59, 999);
        this.countdown = endOfDay.getTime();
      }
    }

    update() {
      requestAnimationFrame(this.update.bind(this));

      if (this.i++ % 10 !== 0) return;

      const now = new Date().getTime();
      const t = this.countdown - now;

      this.time.Days = Math.floor(t / (1000 * 60 * 60 * 24));
      this.time.Hours = Math.floor((t / (1000 * 60 * 60)) % 24);
      this.time.Minutes = Math.floor((t / 1000 / 60) % 60);
      this.time.Seconds = Math.floor((t / 1000) % 60);

      this.updateTracker('days', this.time.Days);
      this.updateTracker('hours', this.time.Hours);
      this.updateTracker('minutes', this.time.Minutes);
      this.updateTracker('seconds', this.time.Seconds);
    }

    updateTracker(id, value) {
      const el = this.el.querySelector(`#${id}`);
      const top = el.querySelector('.flip-card__top');
      const bottom = el.querySelector('.flip-card__bottom');
      const back = el.querySelector('.flip-card__back');
      const backBottom = el.querySelector('.flip-card__back-bottom');

      const currentValue = parseInt(top.textContent);
      const newValue = zerofill(value);

      if (currentValue !== value) {
        top.textContent = newValue;
        bottom.setAttribute('data-value', newValue);
        back.setAttribute('data-value', zerofill(currentValue));
        backBottom.setAttribute('data-value', zerofill(currentValue));

        el.classList.remove('flip');
        void el.offsetWidth;
        el.classList.add('flip');
      }
    }
  }

  document.addEventListener('DOMContentLoaded', () => {
    const el = document.getElementById('flip-clock');
    new Countdown(el, el.getAttribute('data-date'));
  });
</script>
<style>
  .flip-clock {
    text-align: center;
    perspective: 600px;
    margin: 0 auto;
  }
  .flip-clock *,
  .flip-clock *:before,
  .flip-clock *:after {
    box-sizing: border-box;
  }
  .flip-clock__piece {
    display: inline-block;
    margin: 0 0.2vw;
  }
  @media (min-width: 1000px) {
    .flip-clock__piece {
      margin: 0 5px;
    }
  }
  .flip-clock__slot {
    font-size: 1rem;
    line-height: 1.5;
    display: block;
    font-weight: bold;
    /*
	//position: relative;
	//top: -1.6em;
	z-index: 10;
	//color: #FFF;
  */
  }
  .flip-card {
    display: block;
    position: relative;
    padding-bottom: 0.72em;
    font-size: 2.25rem;
    line-height: 0.95;
  }
  @media (min-width: 1000px) {
    .flip-clock__slot {
      font-size: 1.2rem;
    }
    .flip-card {
      font-size: 3rem;
    }
  }
  /*////////////////////////////////////////*/
  .flip-card__top,
  .flip-card__bottom,
  .flip-card__back-bottom,
  .flip-card__back::before,
  .flip-card__back::after {
    display: block;
    height: 0.72em;
    color: #e9e9e9;
    background: linear-gradient(to bottom, #075985, #0369a1, #0284c7);
    padding: 0.23em 0.25em 0.4em;
    border-radius: 0.15em 0.15em 0 0;
    backface-visiblity: hidden;
    transform-style: preserve-3d;
    width: 1.8em;
  }
  .flip-card__bottom,
  .flip-card__back-bottom {
    color: #fff;
    position: absolute;
    top: 50%;
    left: 0;
    background: linear-gradient(to bottom, #0284c7, #0369a1, #075985);
    border-radius: 0 0 0.15em 0.15em;
    pointer-events: none;
    overflow: hidden;
    z-index: 2;
  }
  .flip-card__back-bottom {
    z-index: 1;
  }
  .flip-card__bottom::after,
  .flip-card__back-bottom::after {
    display: block;
    margin-top: -0.72em;
  }
  .flip-card__back::before,
  .flip-card__bottom::after,
  .flip-card__back-bottom::after {
    content: attr(data-value);
  }
  .flip-card__back {
    position: absolute;
    top: 0;
    height: 100%;
    left: 0%;
    pointer-events: none;
  }
  .flip-card__back::before {
    position: relative;
    overflow: hidden;
    z-index: -1;
  }
  .flip .flip-card__back::before {
    z-index: 1;
    -webkit-animation: flipTop 0.3s cubic-bezier(0.37, 0.01, 0.94, 0.35);
    animation: flipTop 0.3s cubic-bezier(0.37, 0.01, 0.94, 0.35);
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    transform-origin: center bottom;
  }
  .flip .flip-card__bottom {
    transform-origin: center top;
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    -webkit-animation: flipBottom 0.6s cubic-bezier(0.15, 0.45, 0.28, 1);
    animation: flipBottom 0.6s cubic-bezier(0.15, 0.45, 0.28, 1);
  }
  @-webkit-keyframes flipTop {
    0% {
      transform: rotateX(0deg);
      z-index: 2;
    }
    0%,
    99% {
      opacity: 1;
    }
    100% {
      transform: rotateX(-90deg);
      opacity: 0;
    }
  }
  @keyframes flipTop {
    0% {
      transform: rotateX(0deg);
      z-index: 2;
    }
    0%,
    99% {
      opacity: 1;
    }
    100% {
      transform: rotateX(-90deg);
      opacity: 0;
    }
  }
  @-webkit-keyframes flipBottom {
    0%,
    50% {
      z-index: -1;
      transform: rotateX(90deg);
      opacity: 0;
    }
    51% {
      opacity: 1;
    }
    100% {
      opacity: 1;
      transform: rotateX(0deg);
      z-index: 5;
    }
  }
  @keyframes flipBottom {
    0%,
    50% {
      z-index: -1;
      transform: rotateX(90deg);
      opacity: 0;
    }
    51% {
      opacity: 1;
    }
    100% {
      opacity: 1;
      transform: rotateX(0deg);
      z-index: 5;
    }
  }
</style>
